---
name: CI on Terraform code

on:
    push:
    workflow_dispatch:
    pull_request:
        types: [opened, edited, synchronize]

env:
    TF_ROOT: test

jobs:
    set_up_job:
        runs-on: ubuntu-latest

        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set matrix
              id: set-matrix
              run: |
                  MODULES=$(find ${{ env.TF_ROOT }} -name '*.tf' -exec dirname {} \; | sort -u | sed "s|${{ env.TF_ROOT }}/||")
                  DIRS_ARRAY=()

                  for module in $MODULES
                  do
                    DIRS_ARRAY+=("$module")
                  done
                  MODULES_JSON=$(echo "${DIRS_ARRAY[@]}" | jq -R -s -c 'split(" ")')
                  echo "::set-output name=matrix::${MODULES_JSON}"

    ci:
        needs: set_up_job
        runs-on: ubuntu-latest
        strategy:
            matrix:
                module: ${{fromJson(needs.set_up_job.outputs.matrix)}}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  terraform init

            - name: Terraform Fmt
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  terraform fmt -check -recursive

            - name: Terraform Validate
              run: |
                  cd ${{ env.TF_ROOT }}/${{ matrix.module }}
                  terraform validate
