name: CI module-template üßπ

on:
  push:
    branches:
      - main
      - master
    paths:
      - module-template/**
  pull_request:
    paths:
      - module-template/**
      - .github/workflows/ci-mod-module-template.yaml
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  checks: write

env:
  GO_VERSION: "1.22"
  DAGGER_VERSION: 0.14.0
  GOLANGCI_LINT_VERSION: v1.62.0
  MODULE: module-template

jobs:
  dagger-build:
    name: üèóÔ∏è Build module-template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: üì¶ Dagger Develop All Modules
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: ${{ env.MODULE }}
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üß™ Dagger Develop Tests
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: ${{ env.MODULE }}/tests
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìÑ Dagger Develop Examples
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: ${{ env.MODULE }}/examples/go
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dagger-list-functions:
    needs: dagger-build
    name: üìû List All Functions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: üì¶ List Main Functions
        uses: dagger/dagger-for-github@v6
        with:
          verb: functions
          module: ${{ env.MODULE }}
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üß™ List Test Functions
        uses: dagger/dagger-for-github@v6
        with:
          verb: functions
          module: ${{ env.MODULE }}/tests
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìÑ List Example Functions
        uses: dagger/dagger-for-github@v6
        with:
          verb: functions
          module: ${{ env.MODULE }}/examples/go
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run-tests:
    needs: dagger-build
    name: üß™ Run All Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: üí£ Run Tests
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          args: test-all
          module: ${{ env.MODULE }}/tests
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run-recipes:
    needs: dagger-build
    name: ü•ó Run All Recipes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: ü•ó Run Recipes
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          args: all-recipes
          module: ${{ env.MODULE }}/examples/go
          version: ${{ env.DAGGER_VERSION }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  golangci-lint:
    needs: dagger-build
    name: üîç Run All Linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: üîß Install Tools
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s ${{ env.GOLANGCI_LINT_VERSION }}
          sudo mv ./bin/golangci-lint /usr/local/bin/golangci-lint

      - name: üìù Lint Main Module
        run: cd ${{ env.MODULE }} && golangci-lint run --config=../.golangci.yml --verbose

      - name: üìù Lint Test Module
        run: cd ${{ env.MODULE }}/tests && golangci-lint run --config=../../.golangci.yml --verbose

      - name: üìù Lint Examples Module
        run: cd ${{ env.MODULE }}/examples/go && golangci-lint run --config=../../../.golangci.yml --verbose
