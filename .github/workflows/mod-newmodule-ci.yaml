---
name: Module newmodule CI Linter
on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  linter:
    strategy:
      matrix:
        go: ['1.22']
        dagversion: [0.11.6, 0.11.7]
        module: [newmodule]
    name: Lint ${{ matrix.module }} on ${{ matrix.os }} with Dagger ${{ matrix.dagversion }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Dagger Develop on Module ðŸ“¦ ${{ matrix.module }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: develop
          module: ${{ matrix.module }}
          version: ${{ matrix.dagversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Develop on Test Module ðŸ§ª ${{ matrix.module }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: develop
          module: ${{ matrix.module }}/tests
          version: ${{ matrix.dagversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Call on Module ${{ matrix.module }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: call
          module: ${{ matrix.module }}
          version: ${{ matrix.dagversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Call on Test Module ðŸ§ª ${{ matrix.module }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: call
          module: ${{ matrix.module }}/tests
          version: ${{ matrix.dagversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run golangci-lint on module ${{ matrix.module }} ðŸ“¦
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58
          args: --config .golangci.yml ./${{ matrix.module }}/dagger
      - name: Run golangci-lint on module ${{ matrix.module }}/tests ðŸ§ª
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58
          args: --config .golangci.yml ./${{ matrix.module }}/tests/dagger

  module-test:
    strategy:
      matrix:
        go: ['1.22']
        dagversion: [0.11.6, 0.11.7]
        module: [newmodule]
    needs: linter
    name: Run Tests ðŸ§ª in ${{ matrix.module }} on ${{ matrix.os }} with Dagger ${{ matrix.dagversion }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Dagger Develop on Module ðŸ“¦ ${{ matrix.module }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: develop
          module: ${{ matrix.module }}
          version: ${{ matrix.dagversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Develop on Test Module ðŸ§ª ${{ matrix.module }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: develop
          module: ${{ matrix.module }}/tests
          version: ${{ matrix.dagversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Running Tests ðŸ’£ in ${{ matrix.module }} on ${{ matrix.os }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: call
          args: test-all
          module: ${{ matrix.module }}/tests
          version: ${{ matrix.dagversion }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
