name: CI gopkgpublisher ðŸ§¹
on:
  push:
    branches:
      - main
      - master
    paths:
      - gopkgpublisher/**/*.go
  pull_request:
    paths:
      - gopkgpublisher/**/*.go
  workflow_dispatch:
permissions:
  contents: read
  pull-requests: read
  checks: write
defaults:
  run:
    working-directory: gopkgpublisher
env:
  DAGGER_VERSION_EXAMPLES_GO: 0.14.0
jobs:
  dagger-linter:
    strategy:
      matrix:
        go: ["1.22"]
        dagversion: [0.14.0]
    name: Lint gopkgpublisher on ${{ matrix.go }} with Dagger ${{ matrix.dagversion }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Dagger Develop on Module ðŸ“¦ with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Develop on Test Module ðŸ§ª with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher/tests
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Develop on Examples Module for Go ðŸ“„ with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher/examples/go
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Call on Module ðŸ“¦ with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          module: gopkgpublisher
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Call on Test Module ðŸ§ª with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          module: gopkgpublisher/tests
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Call on Test Examples/Go Module ðŸ“„ with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          module: gopkgpublisher/examples/go
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  golangci-lint:
    strategy:
      matrix:
        go: ["1.22"]
    name: GolangCI-Lint for gopkgpublisher
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      # Dagger main module ðŸ“¦ (develop & golang ci-lint)
      - name: Dagger Develop on Module ðŸ“¦ gopkgpublisher with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Install golangci-lint using curl
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s latest
          sudo mv ./bin/golangci-lint /usr/local/bin/golangci-lint
      - name: Run golangci-lint on gopkgpublisher ðŸ“¦
        run: |
          golangci-lint run --config=../.golangci.yml --verbose
      # Dagger test module ðŸ§ª (develop & golang ci-lint)
      - name: Dagger Develop on Module tests ðŸ§ª gopkgpublisher with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher/tests
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run golangci-lint on gopkgpublisher/tests ðŸ§ª
        run: |
          cd tests
          ls -ltrah
          golangci-lint run --config=../../.golangci.yml --verbose
      # Dagger examples (go) module ðŸ“„ (develop & golang ci-lint)
      - name: Dagger Develop on Module Examples/Go ðŸ“„ gopkgpublisher with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher/examples/go
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run golangci-lint on gopkgpublisher/examples/go ðŸ“„ (develop & golang ci-lint)
        run: |
          cd examples/go
          ls -ltrah
          golangci-lint run --config=../../../.golangci.yml --verbose
  gopkgpublisher-test:
    strategy:
      matrix:
        go: ["1.22"]
        dagversion: [0.14.0]
    needs: [dagger-linter, golangci-lint]
    name: Run Tests ðŸ§ª in gopkgpublisher on ${{ matrix.go }} with Dagger ${{ matrix.dagversion }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Dagger Develop on Module ðŸ“¦ with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dagger Develop on Test Module ðŸ§ª with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher/tests
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Running Tests ðŸ’£ in gopkgpublisher on ${{ matrix.go }} with Dagger ${{ matrix.dagversion }}
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          args: test-all
          module: gopkgpublisher/tests
          version: ${{ matrix.dagversion }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  gopkgpublisher-recipes-go:
    needs: [dagger-linter, golangci-lint]
    name: Run recipes ðŸ¥— in gopkgpublisher/examples/go on ${{ matrix.go }} with Dagger ${{ matrix.dagversion }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Dagger Develop on Module Examples ðŸ“„
        uses: dagger/dagger-for-github@v6
        with:
          verb: develop
          module: gopkgpublisher/examples/go
          version: ${{ env.DAGGER_VERSION_EXAMPLES_GO }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Running Recipes all recipes ðŸ’£ in gopkgpublisher/examples/go
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          args: all-recipes
          module: gopkgpublisher/examples/go
          version: ${{ env.DAGGER_VERSION_EXAMPLES_GO }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
