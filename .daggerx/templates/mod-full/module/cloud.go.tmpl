package main

import (
	"context"

	"github.com/Excoriate/daggerverse/{{.module_name_pkg}}/internal/dagger"
)

// WithAWSKeys sets AWS credentials as environment variables.
// awsKeyId is the AWS Access Key ID.
// awsSecretAccessKey is the AWS Secret Access Key.
// awsSessionToken is the AWS Session Token; optional.
// awsRegion is the AWS Region; optional.
// awsProfile is the AWS Profile; optional.
func (m *{{.module_name}}) WithAWSKeys(
	// awsKeyId is the AWS Access Key ID.
	awsKeyID *dagger.Secret,
	// awsSecretAccessKey is the AWS Secret Access Key.
	awsSecretAccessKey *dagger.Secret,
	// awsSessionToken is the AWS Session Token; optional.
	// +optional
	awsSessionToken *dagger.Secret,
	// awsRegion is the AWS Region; optional.
	// +optional
	awsRegion *dagger.Secret,
	// awsProfile is the AWS Profile; optional.
	// +optional
	awsProfile *dagger.Secret,
) *{{.module_name}} {
	awsKeyValue, _ := awsKeyID.Plaintext(context.Background())
	awsSecretValue, _ := awsSecretAccessKey.Plaintext(context.Background())

	m.Ctr = m.
		Ctr.
		WithEnvVariable("AWS_ACCESS_KEY_ID", awsKeyValue).
		WithEnvVariable("AWS_SECRET_ACCESS_KEY", awsSecretValue)

	if awsSessionToken != nil {
		awsSessionTokenValue, _ := awsSessionToken.Plaintext(context.Background())
		m.Ctr = m.Ctr.
			WithEnvVariable("AWS_SESSION_TOKEN", awsSessionTokenValue)
	}

	if awsRegion != nil {
		awsRegionValue, _ := awsRegion.Plaintext(context.Background())
		m.Ctr = m.Ctr.
			WithEnvVariable("AWS_REGION", awsRegionValue)
	}

	if awsProfile != nil {
		awsProfileValue, _ := awsProfile.Plaintext(context.Background())
		m.Ctr = m.Ctr.
			WithEnvVariable("AWS_PROFILE", awsProfileValue)
	}

	return m
}

// WithAzureCredentials sets Azure credentials as environment variables.
// azureClientId is the Azure Client ID.
// azureClientSecret is the Azure Client Secret.
// azureTenantId is the Azure Tenant ID.
func (m *{{.module_name}}) WithAzureCredentials(
	// azureClientId is the Azure Client ID.
	azureClientID *dagger.Secret,
	// azureClientSecret is the Azure Client Secret.
	azureClientSecret *dagger.Secret,
	// azureTenantId is the Azure Tenant ID.
	azureTenantID *dagger.Secret,
) *{{.module_name}} {
	azureClientIDValue, _ := azureClientID.Plaintext(context.Background())
	azureClientSecretValue, _ := azureClientSecret.Plaintext(context.Background())
	azureTenantIDValue, _ := azureTenantID.Plaintext(context.Background())

	m.Ctr = m.
		Ctr.
		WithEnvVariable("AZURE_CLIENT_ID", azureClientIDValue).
		WithEnvVariable("AZURE_CLIENT_SECRET", azureClientSecretValue).
		WithEnvVariable("AZURE_TENANT_ID", azureTenantIDValue)

	return m
}
